{"version":3,"sources":["redux/app/types.js","api/endPoints.js","api/api.js","api/apiKey.js","helpers/helpers.js","redux/app/actions.js","components/AppBar/AppBar.jsx","redux/app/selectors.js","components/Forms/TermFilterForm.jsx","components/List/List.jsx","components/List/ListCompetitionsContainer.jsx","components/List/ListTeamsContainer.jsx","components/Tables/TeamTable.jsx","components/Forms/DateFilterForm.jsx","utils/routes.js","components/Calendar/TeamCalendar.jsx","components/Tables/CompetitionTable.jsx","components/Calendar/CompetitionCalendar.jsx","App.js","reportWebVitals.js","redux/app/appReducer.js","redux/store.js","index.js"],"names":["INITIALIZING_APP_SUCCESS","SET_COMPETITIONS","SET_TEAMS","SET_TEAM_CALENDAR","CLEAN_TEAM_CALENDAR","SET_COMPETITION_CALENDAR","CLEAN_COMPETITION_CALENDAR","COMPETITIONS","TEAMS","MATCHES","instanceAxios","axios","baseURL","headers","requestTeamCalendar","id","get","PATH","then","response","data","requestTeamCalendarByPeriod","dateFrom","dateTo","requestCompetitionsCalendarByPeriod","getDateTimeInLocal","dateUTC","d","Date","date","toLocaleDateString","time","toLocaleTimeString","getScoreMatch","match","score","penalties","homeTeam","extraTime","fullTime","halfTime","awayTeam","initializingApp","dispatch","Promise","all","competitionsData","teamsData","console","log","processedCompetitionsArray","competitions","filter","c","plan","map","pick","processedTeamsArray","teams","type","payload","setTeamCalendar","matches","currentTeamId","setCompetitionCalendar","currentCompetitionId","AppBar","Navbar","bg","variant","className","Container","Brand","as","Nav","Link","NavLink","to","getCompetitions","state","app","title","name","subtitle","area","getTeams","t","getTeamCalendarStatus","teamCalendar","status","getTeamCalendarList","list","currentTeam","find","getCompetitionCalendarStatus","competitionCalendar","getCompetitionCalendarList","currentCompetition","TermFilterForm","getRedirectPath","history","useHistory","formik","useFormik","initialValues","term","validate","values","errors","onSubmit","push","Form","handleSubmit","Row","Col","sm","md","lg","Control","placeholder","onChange","handleChange","value","isInvalid","Feedback","tooltip","xs","Button","renderCards","getLink","item","Card","Body","Title","Subtitle","List","props","listItems","i","toLowerCase","includes","connect","comp","team","TeamTable","length","Table","bordered","hover","size","m","competition","rival","winner","DateFilterForm","dateFromInitial","dateToInitial","Group","controlId","Label","column","required","pattern","PERIOD","mapDispatchToProps","getTeamCalendar","a","undefined","processedTeamCalendar","utcDate","cleanTeamCalendar","useParams","useEffect","Img","src","crestUrl","style","width","Text","founded","clubColors","href","email","target","CompetitionTable","getCompetitionCalendar","processedCompetitionCalendar","cleanCompetitionCalendar","lastMonthPeriod","setMonth","getMonth","split","reverse","join","getLastMonthPeriod","emblemUrl","ensignUrl","initialized","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","handlers","action","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af34af77.chunk.js","sourcesContent":["const INITIALIZING_APP_SUCCESS = 'INITIALIZING_APP_SUCCESS';\r\nconst SET_COMPETITIONS = 'SET_COMPETITIONS';\r\nconst SET_TEAMS = 'SET_TEAMS';\r\nconst SET_TEAM_CALENDAR = 'SET_TEAM_CALENDAR';\r\nconst CLEAN_TEAM_CALENDAR = 'CLEAN_TEAM_CALENDAR';\r\nconst SET_COMPETITION_CALENDAR = 'SET_COMPETITION_CALENDAR';\r\nconst CLEAN_COMPETITION_CALENDAR = 'CLEAN_COMPETITION_CALENDAR';\r\n\r\nexport { INITIALIZING_APP_SUCCESS, SET_COMPETITIONS, SET_TEAMS, SET_TEAM_CALENDAR, CLEAN_TEAM_CALENDAR, SET_COMPETITION_CALENDAR, CLEAN_COMPETITION_CALENDAR }\r\n\r\n","export const COMPETITIONS = '/competitions'\nexport const TEAMS = '/teams'\nexport const MATCHES = '/matches'","import * as axios from \"axios\";\r\nimport * as PATH from \"./endPoints\";\r\nimport apiKey from \"./apiKey\";\r\n\r\nconst instanceAxios = axios.create({\r\n  baseURL: 'https://api.football-data.org/v2',\r\n  headers: {\r\n    \"X-Auth-Token\": apiKey,\r\n  }\r\n})\r\n\r\nexport const getCompetitions = () => {\r\n  return instanceAxios.get(`${PATH.COMPETITIONS}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport const getTeams = () => {\r\n  return instanceAxios.get(`${PATH.TEAMS}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport const requestTeamCalendar = (id) => {\r\n  return instanceAxios.get(`${PATH.TEAMS}/${id}${PATH.MATCHES}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport const requestTeamCalendarByPeriod = (id, dateFrom, dateTo) => {\r\n  return instanceAxios.get(`${PATH.TEAMS}/${id}${PATH.MATCHES}?dateFrom=${dateFrom}&dateTo=${dateTo}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport const requestCompetitionsCalendarByPeriod = (id, dateFrom, dateTo) => {\r\n  return instanceAxios.get(`${PATH.COMPETITIONS}/${id}${PATH.MATCHES}?dateFrom=${dateFrom}&dateTo=${dateTo}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n","const apiKey = '42423c99d523409aae62e30867c8bcdc'\n\nexport default apiKey","export const getDateTimeInLocal = (dateUTC) => {\n  const d = new Date(dateUTC);\n  return { date: d.toLocaleDateString(), time: d.toLocaleTimeString()}\n}\n\nexport const getScoreMatch = (match) => {\n  if (match.score.penalties.homeTeam !== null) {\n    return match.score.penalties\n  }\n  if (match.score.extraTime.homeTeam !== null) {\n    return match.score.extraTime\n  }\n  if (match.score.fullTime.homeTeam !== null) {\n    return match.score.fullTime\n  }\n  if (match.score.halfTime.homeTeam !== null) {\n    return match.score.halfTime\n  }\n  return ({homeTeam: '--', awayTeam: '--'})\n}\n\nexport const getLastMonthPeriod = () => {\n  const d = new Date()\n  const dateTo = d.toLocaleDateString('ru-RU')\n\n  d.setMonth(d.getMonth() - 1)\n  const dateFrom = d.toLocaleDateString('ru-RU')\n\n  return({dateTo: dateTo.split('.').reverse().join('-'), dateFrom: dateFrom.split('.').reverse().join('-')})\n}","import { INITIALIZING_APP_SUCCESS, SET_COMPETITIONS, SET_TEAMS, SET_TEAM_CALENDAR, CLEAN_TEAM_CALENDAR, SET_COMPETITION_CALENDAR, CLEAN_COMPETITION_CALENDAR } from './types';\r\nimport { getCompetitions, getTeams, requestTeamCalendar, requestTeamCalendarByPeriod, requestCompetitionsCalendarByPeriod } from '../../api/api.js';\r\nimport { getDateTimeInLocal, getScoreMatch } from '../../helpers/helpers.js';\r\nimport pick from 'lodash/pick';\r\n\r\nconst initializedSuccess = () => ({ type: INITIALIZING_APP_SUCCESS })\r\nconst setCompetitions = (competitions) => ({ type: SET_COMPETITIONS, payload: { competitions } })\r\nconst setTeams = (teams) => ({ type: SET_TEAMS, payload: { teams } })\r\n\r\nexport const initializingApp = () => (dispatch) => {\r\n\tPromise.all([getCompetitions(), getTeams()])\r\n\t\t.then(([competitionsData, teamsData]) => {\r\n\t\t\tconsole.log(competitionsData, teamsData)\r\n\t\t\tconst processedCompetitionsArray = competitionsData.competitions\r\n\t\t\t\t.filter(c => c.plan === 'TIER_ONE')\r\n\t\t\t\t.map(c => pick(c, ['id', 'name', 'area', 'numberOfAvailableSeasons', 'code', 'emblemUrl']))\r\n\t\t\tconst processedTeamsArray = teamsData.teams\r\n\t\t\t\t.map(c => pick(c, ['id', 'name', 'shortName', 'area', 'crestUrl', 'website', 'email', 'founded', 'clubColors']))\r\n\t\t\tconsole.log(processedCompetitionsArray, processedTeamsArray)\r\n\t\t\tdispatch(setCompetitions(processedCompetitionsArray))\r\n\t\t\tdispatch(setTeams(processedTeamsArray))\r\n\t\t})\r\n\t\t.then(() => {\r\n\t\t\tdispatch(initializedSuccess())\r\n\t\t})\r\n}\r\n\r\nconst setTeamCalendar = (matches, currentTeamId) => ({ type: SET_TEAM_CALENDAR, payload: { matches, currentTeamId } })\r\nexport const cleanTeamCalendar = () => ({ type: CLEAN_TEAM_CALENDAR })\r\n\r\nexport const getTeamCalendar = (id, dateFrom, dateTo) => async (dispatch) => {\r\n\tlet teamCalendar\r\n\tif (dateFrom === undefined && dateTo === undefined) {\r\n\t\tteamCalendar = await requestTeamCalendar(id)\r\n\t} else {\r\n\t\tteamCalendar = await requestTeamCalendarByPeriod(id, dateFrom, dateTo)\r\n\t}\r\n\r\n\tconst processedTeamCalendar = teamCalendar.matches.map(m => ({\r\n\t\tid: m.id,\r\n\t\t...getDateTimeInLocal(m.utcDate),\r\n\t\tcompetition: { id: m.competition.id, name: m.competition.name },\r\n\t\trival: id == m.awayTeam.id ? m.homeTeam : m.awayTeam,\r\n\t\tscore: getScoreMatch(m),\r\n\t\twinner: m.winner === 'HOME_TEAM' ? m.homeTeam : m.awayTeam,\r\n\t}))\r\n\r\n\tconst currentTeamId = id\r\n\tdispatch(setTeamCalendar(processedTeamCalendar, currentTeamId))\r\n}\r\n\r\nconst setCompetitionCalendar = (matches, currentCompetitionId) => ({ type: SET_COMPETITION_CALENDAR, payload: { matches, currentCompetitionId } })\r\nexport const cleanCompetitionCalendar = () => ({ type: CLEAN_COMPETITION_CALENDAR })\r\n\r\nexport const getCompetitionCalendar = (id, dateFrom, dateTo) => async (dispatch) => {\r\n\tlet competitionCalendar = await requestCompetitionsCalendarByPeriod(id, dateFrom, dateTo)\r\n\r\n\tconst processedCompetitionCalendar = competitionCalendar.matches\r\n\t\t.map(m => pick(m, ['id', 'homeTeam', 'awayTeam', 'score', 'status', 'utcDate']))\r\n\t\t.map(m => ({ ...m, ...getDateTimeInLocal(m.utcDate), score: getScoreMatch(m) }))\r\n\t\r\n\tconst currentCompetitionId = id\r\n\tdispatch(setCompetitionCalendar(processedCompetitionCalendar, currentCompetitionId))\r\n}","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav, Container } from 'react-bootstrap';\n\nconst AppBar = () => {\n  return (\n    <Navbar bg=\"success\" variant=\"light\" className=\"bg-success\">\n      <Container>\n        <Navbar.Brand as={'h1'} className=\"mr-auto\">SoccerStat App</Navbar.Brand>\n        <Nav >\n          <Nav.Link as={NavLink} to=\"/competitions\">Турниры</Nav.Link>\n          <Nav.Link as={NavLink} to=\"/teams\">Команды</Nav.Link>\n        </Nav>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default AppBar","export const getCompetitions = (state) => {\r\n  return state.app.competitions.map(c => ({ id: c.id, title: c.name, subtitle: c.area.name }))\r\n}\r\n\r\nexport const getTeams = (state) => {\r\n  return state.app.teams.map(t => ({ id: t.id, title: t.name, subtitle: t.area.name }))\r\n}\r\n\r\nexport const getTeamCalendarStatus = (state) => state.app.teamCalendar.status\r\nexport const getTeamCalendarList = (state) => state.app.teamCalendar.list\r\nexport const currentTeam = (state) => {\r\n  const { currentTeamId } = state.app.teamCalendar\r\n  return state.app.teams.find(t => t.id == currentTeamId)\r\n}\r\n\r\nexport const getCompetitionCalendarStatus = (state) => state.app.competitionCalendar.status\r\nexport const getCompetitionCalendarList = (state) => state.app.competitionCalendar.list\r\nexport const currentCompetition = (state) => {\r\n  const { currentCompetitionId } = state.app.competitionCalendar\r\n  return state.app.competitions.find(c => c.id == currentCompetitionId)\r\n}","import React from 'react';\nimport { Form, Button, Row, Col, Tooltip } from 'react-bootstrap';\nimport { useFormik, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router';\n\nconst TermFilterForm = ({ getRedirectPath }) => {\n  let history = useHistory();\n  const validate = values => {\n    const errors = {};\n    if (!getRedirectPath(values.term)) {\n      errors.term = 'Ничего не найдено';\n    }\n    return errors;\n  };\n  const formik = useFormik({\n    initialValues: {\n      term: '',\n    },\n    validate,\n    onSubmit: (values) => {\n      history.push(getRedirectPath(values.term))\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Form.Row className=\"justify-content-end\">\n        <Col sm={6} md={4} lg={3} className=\"mb-2 mb-sm-0\">\n          <Form.Control type=\"text\" placeholder=\"Поиск\" name=\"term\" onChange={formik.handleChange} value={formik.values.term}\n          isInvalid={!!formik.errors.term}/>\n          <Form.Control.Feedback tooltip type=\"invalid\">{formik.errors.term}</Form.Control.Feedback>\n        </Col>\n        <Col xs=\"auto\">\n          <Button variant=\"success\" type=\"submit\" className=\"ml-auto\">Найти</Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  )\n}\n\nexport default TermFilterForm","import React from 'react';\nimport { Col, Container, Row, Dropdown, Form, Button, Card } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport TermFilterForm from '../Forms/TermFilterForm';\n\nconst renderCards = (data, getLink) => {\n  return data.map(item => {\n    return (\n      <Col sm={6} md={4} lg={3} className={'mb-3'} key={item.id}>\n        <NavLink to={getLink(item)} className={'text-dark'}>\n          <Card className=\"text-center h-100\">\n            <Card.Body>\n              <Card.Title>{item.title}</Card.Title>\n              <Card.Subtitle>{item.subtitle}</Card.Subtitle>\n            </Card.Body>\n          </Card>\n        </NavLink>\n      </Col>\n    )\n  })\n}\n\nconst getRedirectPath = (getLink, listItems) => {\n  return (term) => {\n    const item = listItems.find(i => i.title.toLowerCase().includes(term.toLowerCase()))\n    if (!item) return null\n    return getLink(item)\n  }\n}\n\nconst List = (props) => {\n  return (\n    <Container>\n      <TermFilterForm getRedirectPath={getRedirectPath(props.getLink, props.listItems)} />\n      <Row className=\"my-4\">\n        {renderCards(props.listItems, props.getLink)}\n      </Row>\n    </Container>\n  )\n}\n\nexport default List","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getCompetitions } from '../../redux/app/selectors';\nimport List from './List';\n\nconst ListCompetitionsContainer = (props) => {\n  const getLinkForCompetition = (comp) => {\n    return `/competitions/${comp.id}`\n  }\n  return (\n    <>\n      <h2 className={'text-center py-4'}>Список лиг</h2>\n      <List listItems={props.listItems} getLink={getLinkForCompetition} />\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  listItems: getCompetitions(state),\n})\n\nexport default connect(mapStateToProps)(ListCompetitionsContainer)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getTeams } from '../../redux/app/selectors';\nimport List from './List';\n\nconst ListTeamsContainer = (props) => {\n  const getLinkForTeam = (team) => {\n    return `/teams/${team.id}`\n  }\n  return (\n    <>\n      <h2 className={'text-center py-4'}>Список команд</h2>\n      <List listItems={props.listItems} getLink={getLinkForTeam} />\n    </>\n  )\n}\n\n\n\nconst mapStateToProps = (state) => ({\n  listItems: getTeams(state),\n})\n\n\nexport default connect(mapStateToProps)(ListTeamsContainer)","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nconst TeamTable = ({ list }) => {\n\n  if (list.length === 0) {\n    return <h4 className=\"text-center\">Нет игр. Выберите другой период.</h4>\n  }\n  return (\n    <Table bordered hover size=\"sm\" className='text-center'>\n      <thead>\n        <tr>\n          <th>Дата</th>\n          <th>Турнир</th>\n          <th>Соперник</th>\n          <th>Счет</th>\n          <th>Победитель</th>\n        </tr>\n      </thead>\n      <tbody>\n        {list.map(m => <tr key={m.id}><td>{m.date}</td><td>{m.competition.name}</td><td>{m.rival.name}</td><td>{`${m.score.homeTeam}:${m.score.awayTeam}`}</td><td>{m.winner.name}</td></tr>)}\n      </tbody>\n    </Table>\n\n  )\n}\n\nexport default TeamTable","import React from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router';\n\nconst DateFilterForm = ({ dateFrom: dateFromInitial = '', dateTo: dateToInitial = '', getRedirectPath }) => {\n  let history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      dateFrom: dateFromInitial,\n      dateTo: dateToInitial,\n    },\n    onSubmit: (values) => {\n      history.push(getRedirectPath(values.dateFrom, values.dateTo))\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Form.Group as={Row} controlId=\"dateFrom\" className={'align-items-center'}>\n        <Form.Label column>Начало периода</Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"date\" placeholder=\"Enter email\" name={\"dateFrom\"} onChange={formik.handleChange} value={formik.values.dateFrom} required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" size=\"sm\"/>\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"dateTo\" className={'align-items-center'}>\n        <Form.Label column>Конец периода</Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"date\" placeholder=\"Enter email\" name={\"dateTo\"} onChange={formik.handleChange} value={formik.values.dateTo} required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" size=\"sm\"/>\n        </Col>\n      </Form.Group>\n\n      <Button variant=\"success\" type=\"submit\">Показать</Button>\n    </Form>\n  )\n}\n\nexport default DateFilterForm","export const MAIN = '/soccer-stat';\nexport const COMPETITIONS = '/competitions';\nexport const TEAMS = '/teams';\nexport const PERIOD = '/period';\nexport const ANY_ROUTE = '*';\n","import React, { useEffect } from 'react';\nimport { Card, Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getTeamCalendar, cleanTeamCalendar } from '../../redux/app/actions'\nimport { getTeamCalendarStatus, getTeamCalendarList, currentTeam } from '../../redux/app/selectors';\nimport TeamTable from '../Tables/TeamTable';\nimport DateFilterForm from '../Forms/DateFilterForm';\nimport * as to from '../../utils/routes';\n\nconst TeamCalendar = (props) => {\n  let { id, dateFrom, dateTo } = useParams();\n\n  const getRedirectPath = (dateFrom, dateTo) => {\n    return `${to.TEAMS}/${id}${to.PERIOD}/${dateFrom}/${dateTo}`\n  }\n\n  useEffect(() => {\n    props.getTeamCalendar(id, dateFrom, dateTo)\n    return () => {\n      props.cleanTeamCalendar()\n    }\n  }, [id, dateFrom, dateTo])\n\n  if (props.status === 'fetching') {\n    return null\n  }\n  return (\n    <Container >\n      <h2 className={'text-center py-4'}>Календарь игр</h2>\n      <Row>\n        <Col lg={'6'} className={'mt-3'}>\n          <Card className={'h-100'}>\n            <Card.Body>\n              <Row>\n                <Col xs={'auto'}>\n                  <Card.Img src={props.currentTeam.crestUrl} style={{ width: 100 + 'px' }} />\n                </Col>\n                <Col>\n                  <Card.Title as=\"h4\">{props.currentTeam.name}</Card.Title>\n                  <Card.Subtitle as=\"h5\" className=\"text-secondary\">{props.currentTeam.area.name}</Card.Subtitle>\n                  <Card.Text as=\"div\" className=\"mt-3\">\n                    <p className=\"my-1\">Founded: {props.currentTeam.founded}</p>\n                    <p className=\"my-1\">Club colors: {props.currentTeam.clubColors}</p>\n                    <p className=\"my-1\">Email: <a href={`mailto:${props.currentTeam.email}`} target=\"_blank\">props.currentTeam.email</a></p>\n                  </Card.Text>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={'6'} className={'mt-3'}>\n          <Card className=\"text-center className={'h-100'}\">\n            <Card.Body>\n              <Card.Title as=\"h4\">Введите период</Card.Title>\n              <DateFilterForm dateFrom={dateFrom} dateTo={dateTo} getRedirectPath={getRedirectPath} />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row className={'mt-3'}>\n        <Col className=\"overflow-auto\">\n          <TeamTable list={props.list} />\n        </Col>\n      </Row>\n    </Container>\n\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  status: getTeamCalendarStatus(state),\n  list: getTeamCalendarList(state),\n  currentTeam: currentTeam(state),\n})\n\nconst mapDispatchToProps = ({\n  getTeamCalendar,\n  cleanTeamCalendar,\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamCalendar);","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nconst CompetitionTable = ({ list }) => {\n\n  if (list.length === 0) {\n    return <h4 className=\"text-center\">Нет игр. Выберите другой период.</h4>\n  }\n  return (\n    <Table bordered hover size=\"sm\" className='text-center'>\n      <thead>\n        <tr>\n          <th>Дата</th>\n          <th>Хозяева</th>\n          <th>Счет</th>\n          <th>Гости</th>\n          <th>Статус</th>\n        </tr>\n      </thead>\n      <tbody>\n        {list.map(m => <tr key={m.id}><td>{m.date}</td><td>{m.homeTeam.name}</td><td>{`${m.score.homeTeam}:${m.score.awayTeam}`}</td><td>{m.awayTeam.name}</td><td>{m.status}</td></tr>)}\n      </tbody>\n    </Table>\n\n  )\n}\n\nexport default CompetitionTable","import React, { useEffect } from 'react';\nimport { Card, Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getCompetitionCalendar, cleanCompetitionCalendar } from '../../redux/app/actions'\nimport { getCompetitionCalendarStatus, getCompetitionCalendarList, currentCompetition } from '../../redux/app/selectors';\nimport { getLastMonthPeriod } from '../../helpers/helpers';\nimport CompetitionTable from '../Tables/CompetitionTable';\nimport DateFilterForm from '../Forms/DateFilterForm';\nimport * as to from '../../utils/routes';\n\nconst CompetitionCalendar = (props) => {\n  let { id, dateFrom, dateTo } = useParams();\n\n  let lastMonthPeriod = getLastMonthPeriod()\n  dateFrom = dateFrom || lastMonthPeriod.dateFrom\n  dateTo = dateTo || lastMonthPeriod.dateTo\n\n  const getRedirectPath = (dateFrom, dateTo) => {\n    return `${to.COMPETITIONS}/${id}${to.PERIOD}/${dateFrom}/${dateTo}`\n  }\n\n  useEffect(() => {\n      props.getCompetitionCalendar(id, dateFrom, dateTo)\n    return () => {\n      props.cleanCompetitionCalendar()\n    }\n  }, [id, dateFrom, dateTo])\n\n  if (props.status === 'fetching') {\n    return null\n  }\n  return (\n    <Container >\n      <h2 className={'text-center py-4'}>Календарь игр</h2>\n      <Row>\n        <Col lg={'6'} className={'mt-3'}>\n          <Card className={'h-100'}>\n            <Card.Body>\n              <Row>\n                <Col xs={'auto'}>\n                  <Card.Img src={props.currentCompetition.emblemUrl || props.currentCompetition.area.ensignUrl} style={{ width: 100 + 'px' }} />\n                </Col>\n                <Col>\n                  <Card.Title as=\"h4\">{props.currentCompetition.name}</Card.Title>\n                  <Card.Subtitle as=\"h5\" className=\"text-secondary\">{props.currentCompetition.area.name}</Card.Subtitle>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={'6'} className={'mt-3'}>\n          <Card className=\"text-center className={'h-100'}\">\n            <Card.Body>\n              <Card.Title as=\"h4\">Введите период</Card.Title>\n              <DateFilterForm dateFrom={dateFrom} dateTo={dateTo} getRedirectPath={getRedirectPath} />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row className={'mt-3'}>\n        <Col className=\"overflow-auto\">\n          <CompetitionTable list={props.list} />\n        </Col>\n      </Row>\n    </Container>\n\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  status: getCompetitionCalendarStatus(state),\n  list: getCompetitionCalendarList(state),\n  currentCompetition: currentCompetition(state),\n})\n\nconst mapDispatchToProps = ({\n  getCompetitionCalendar,\n  cleanCompetitionCalendar,\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompetitionCalendar);","import './App.css';\nimport { initializingApp } from './redux/app/actions';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from './components/AppBar/AppBar.jsx'\nimport ListCompetitionsContainer from './components/List/ListCompetitionsContainer';\nimport ListTeamsContainer from './components/List/ListTeamsContainer';\nimport TeamCalendar from './components/Calendar/TeamCalendar';\nimport CompetitionCalendar from './components/Calendar/CompetitionCalendar';\nimport * as to from '../src/utils/routes.js';\nimport { Redirect, Route, Switch } from 'react-router';\n\nfunction App(props) {\n  useEffect(() => {\n    props.initializingApp()\n  }, [])\n  if (!props.initialized) {\n    return null\n  }\n\n  return (\n    <div className=\"App\">\n      <AppBar />\n      <Switch>\n        <Route path='/' exact render={() => <Redirect to={to.COMPETITIONS} />} />\n        <Route path={to.COMPETITIONS } exact render={() => <ListCompetitionsContainer />} />\n        <Route path={`${to.COMPETITIONS}/:id`} exact render={() => <CompetitionCalendar />} />\n        <Route path={`${to.COMPETITIONS}/:id${to.PERIOD}/:dateFrom/:dateTo`} exact render={() => <CompetitionCalendar />} />\n        <Route path={to.TEAMS } exact render={() => <ListTeamsContainer />} />\n        <Route path={`${to.TEAMS}/:id`} exact render={() => <TeamCalendar />} />\n        <Route path={`${to.TEAMS}/:id${to.PERIOD}/:dateFrom/:dateTo`} exact render={() => <TeamCalendar />} />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initializingApp: () => dispatch(initializingApp())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { INITIALIZING_APP_SUCCESS, SET_COMPETITIONS, SET_TEAMS, SET_TEAM_CALENDAR, CLEAN_TEAM_CALENDAR, SET_COMPETITION_CALENDAR, CLEAN_COMPETITION_CALENDAR } from './types';\r\n\r\nlet initialState = {\r\n\tinitialized: false,\r\n\tcompetitions: [],\r\n\tteams: [],\r\n\tteamCalendar: {\r\n\t\tstatus: 'fetching',\r\n\t\tlist: [],\r\n\t\tcurrentTeamId: null,\r\n\t},\r\n\tcompetitionCalendar: {\r\n\t\tstatus: 'fetching',\r\n\t\tlist: [],\r\n\t\tcurrentCompetitionId: null,\r\n\t}\r\n}\r\n\r\nconst handlers = {\r\n\t[INITIALIZING_APP_SUCCESS]: (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tinitialized: true,\r\n\t\t}\r\n\t},\r\n\t[SET_COMPETITIONS]: (state, action) => {\r\n\t\tconst { competitions } = action.payload\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tcompetitions,\r\n\t\t}\r\n\t},\r\n\t[SET_TEAMS]: (state, action) => {\r\n\t\tconst { teams } = action.payload\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tteams,\r\n\t\t}\r\n\t},\r\n\t[SET_TEAM_CALENDAR]: (state, action) => {\r\n\t\tconst { matches, currentTeamId } = action.payload\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tteamCalendar: {\r\n\t\t\t\t...state.teamCalendar,\r\n\t\t\t\tstatus: 'received',\r\n\t\t\t\tlist: [...matches],\r\n\t\t\t\tcurrentTeamId: currentTeamId,\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[CLEAN_TEAM_CALENDAR]: (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tteamCalendar: {\r\n\t\t\t\tstatus: 'fetching',\r\n\t\t\t\tlist: [],\r\n\t\t\t\tcurrentTeamId: null,\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[SET_COMPETITION_CALENDAR]: (state, action) => {\r\n\t\tconst { matches, currentCompetitionId } = action.payload\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tcompetitionCalendar: {\r\n\t\t\t\tstatus: 'received',\r\n\t\t\t\tlist: [...matches],\r\n\t\t\t\tcurrentCompetitionId: currentCompetitionId,\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[CLEAN_COMPETITION_CALENDAR]: (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tcompetitionCalendar: {\r\n\t\t\t\tstatus: 'fetching',\r\n\t\t\t\tlist: [],\r\n\t\t\t\tcurrentCompetitionId: null,\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n\tif (handlers[action.type]) {\r\n\t\treturn handlers[action.type](state, action);\r\n\t}\r\n\treturn state\r\n}\r\n\r\n\r\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { appReducer } from './app/appReducer';\r\n\r\nconst reducers = combineReducers({\r\n  app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store.js';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}