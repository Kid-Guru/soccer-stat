{"version":3,"sources":["redux/app/types.js","api/api.js","helpers/helpers.js","redux/app/actions.js","components/AppBar/AppBar.jsx","redux/app/selectors.js","components/Forms/TermFilterForm.jsx","components/List/List.jsx","components/List/ListCompetitionsContainer.jsx","components/List/ListTeamsContainer.jsx","components/Tables/TeamTable.jsx","components/Forms/DateFilterForm.jsx","utils/routes.js","components/Calendar/TeamCalendar.jsx","components/Tables/CompetitionTable.jsx","components/Calendar/CompetitionCalendar.jsx","App.js","reportWebVitals.js","redux/app/appReducer.js","redux/store.js","index.js"],"names":["INITIALIZING_APP_SUCCESS","SET_COMPETITIONS","SET_TEAMS","SET_TEAM_CALENDAR","CLEAN_TEAM_CALENDAR","SET_COMPETITION_CALENDAR","CLEAN_COMPETITION_CALENDAR","instanceAxios","axios","baseURL","headers","requestTeamCalendar","id","get","then","response","data","requestTeamCalendarByPeriod","dateFrom","dateTo","requestCompetitionsCalendarByPeriod","getDateTimeInLocal","dateUTC","d","Date","date","toLocaleDateString","time","toLocaleTimeString","getScoreMatch","match","score","penalties","homeTeam","extraTime","fullTime","halfTime","awayTeam","initializingApp","dispatch","Promise","all","competitionsData","teamsData","processedCompetitionsArray","competitions","filter","c","plan","map","pick","processedTeamsArray","teams","type","payload","setTeamCalendar","matches","currentTeamId","setCompetitionCalendar","currentCompetitionId","AppBar","Navbar","bg","variant","Container","Brand","as","className","Nav","Link","NavLink","to","getCompetitions","state","app","title","name","subtitle","area","getTeams","t","getTeamCalendarStatus","teamCalendar","status","getTeamCalendarList","list","currentTeam","find","getCompetitionCalendarStatus","competitionCalendar","getCompetitionCalendarList","currentCompetition","TermFilterForm","getRedirectPath","history","useHistory","formik","useFormik","initialValues","term","validate","values","errors","onSubmit","push","Form","handleSubmit","Row","Col","xs","Control","placeholder","onChange","handleChange","value","isInvalid","Feedback","tooltip","Button","renderCards","getLink","item","sm","md","lg","Card","Body","Title","Subtitle","List","props","listItems","i","toLowerCase","includes","connect","comp","team","TeamTable","length","Table","bordered","hover","size","m","competition","rival","winner","DateFilterForm","dateFromInitial","dateToInitial","Group","controlId","Label","column","required","pattern","COMPETITIONS","TEAMS","PERIOD","mapDispatchToProps","getTeamCalendar","a","undefined","processedTeamCalendar","utcDate","cleanTeamCalendar","useParams","useEffect","Img","src","crestUrl","style","width","CompetitionTable","getCompetitionCalendar","processedCompetitionCalendar","cleanCompetitionCalendar","lastMonthPeriod","setMonth","getMonth","split","reverse","join","getLastMonthPeriod","emblemUrl","initialized","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","handlers","action","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","baseName","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56dcc5dc.chunk.js","sourcesContent":["const INITIALIZING_APP_SUCCESS = 'INITIALIZING_APP_SUCCESS';\r\nconst SET_COMPETITIONS = 'SET_COMPETITIONS';\r\nconst SET_TEAMS = 'SET_TEAMS';\r\nconst SET_TEAM_CALENDAR = 'SET_TEAM_CALENDAR';\r\nconst CLEAN_TEAM_CALENDAR = 'CLEAN_TEAM_CALENDAR';\r\nconst SET_COMPETITION_CALENDAR = 'SET_COMPETITION_CALENDAR';\r\nconst CLEAN_COMPETITION_CALENDAR = 'CLEAN_COMPETITION_CALENDAR';\r\n\r\nexport { INITIALIZING_APP_SUCCESS, SET_COMPETITIONS, SET_TEAMS, SET_TEAM_CALENDAR, CLEAN_TEAM_CALENDAR, SET_COMPETITION_CALENDAR, CLEAN_COMPETITION_CALENDAR }\r\n\r\n","import * as axios from \"axios\";\r\n\r\nconst instanceAxios = axios.create({\r\n  baseURL: 'https://api.football-data.org/v2/',\r\n  headers: {\r\n    \"X-Auth-Token\": \"42423c99d523409aae62e30867c8bcdc\"\r\n  }\r\n})\r\n\r\nexport const getCompetitions = () => {\r\n  return instanceAxios.get(`competitions/`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport const getTeams = () => {\r\n  return instanceAxios.get(`teams/`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport const requestTeamCalendar = (id) => {\r\n  return instanceAxios.get(`teams/${id}/matches`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport const requestTeamCalendarByPeriod = (id, dateFrom, dateTo) => {\r\n  return instanceAxios.get(`teams/${id}/matches?dateFrom=${dateFrom}&dateTo=${dateTo}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport const requestCompetitionsCalendarByPeriod = (id, dateFrom, dateTo) => {\r\n  return instanceAxios.get(`competitions/${id}/matches?dateFrom=${dateFrom}&dateTo=${dateTo}`)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n","export const getDateTimeInLocal = (dateUTC) => {\n  const d = new Date(dateUTC);\n  return { date: d.toLocaleDateString(), time: d.toLocaleTimeString()}\n}\n\nexport const getScoreMatch = (match) => {\n  if (match.score.penalties.homeTeam !== null) {\n    return match.score.penalties\n  }\n  if (match.score.extraTime.homeTeam !== null) {\n    return match.score.extraTime\n  }\n  if (match.score.fullTime.homeTeam !== null) {\n    return match.score.fullTime\n  }\n  if (match.score.halfTime.homeTeam !== null) {\n    return match.score.halfTime\n  }\n  return ({homeTeam: '--', awayTeam: '--'})\n}\n\nexport const getLastMonthPeriod = () => {\n  const d = new Date()\n  const dateTo = d.toLocaleDateString()\n\n  d.setMonth(d.getMonth() - 1)\n  const dateFrom = d.toLocaleDateString()\n\n  return({dateTo: dateTo.split('.').reverse().join('-'), dateFrom: dateFrom.split('.').reverse().join('-')})\n}","import { INITIALIZING_APP_SUCCESS, SET_COMPETITIONS, SET_TEAMS, SET_TEAM_CALENDAR, CLEAN_TEAM_CALENDAR, SET_COMPETITION_CALENDAR, CLEAN_COMPETITION_CALENDAR } from './types';\r\nimport { getCompetitions, getTeams, requestTeamCalendar, requestTeamCalendarByPeriod, requestCompetitionsCalendarByPeriod } from '../../api/api.js';\r\nimport { getDateTimeInLocal, getScoreMatch } from '../../helpers/helpers.js';\r\nimport pick from 'lodash/pick';\r\n\r\nconst initializedSuccess = () => ({ type: INITIALIZING_APP_SUCCESS })\r\nconst setCompetitions = (competitions) => ({ type: SET_COMPETITIONS, payload: { competitions } })\r\nconst setTeams = (teams) => ({ type: SET_TEAMS, payload: { teams } })\r\n\r\nexport const initializingApp = () => (dispatch) => {\r\n\tPromise.all([getCompetitions(), getTeams()])\r\n\t\t.then(([competitionsData, teamsData]) => {\r\n\t\t\tconst processedCompetitionsArray = competitionsData.competitions\r\n\t\t\t\t.filter(c => c.plan === 'TIER_ONE')\r\n\t\t\t\t.map(c => pick(c, ['id', 'name', 'area', 'numberOfAvailableSeasons', 'code', 'emblemUrl']))\r\n\t\t\tconst processedTeamsArray = teamsData.teams\r\n\t\t\t\t.map(c => pick(c, ['id', 'name', 'shortName', 'area', 'crestUrl', 'website']))\r\n\r\n\t\t\tdispatch(setCompetitions(processedCompetitionsArray))\r\n\t\t\tdispatch(setTeams(processedTeamsArray))\r\n\t\t})\r\n\t\t.then(() => {\r\n\t\t\tdispatch(initializedSuccess())\r\n\t\t})\r\n}\r\n\r\nconst setTeamCalendar = (matches, currentTeamId) => ({ type: SET_TEAM_CALENDAR, payload: { matches, currentTeamId } })\r\nexport const cleanTeamCalendar = () => ({ type: CLEAN_TEAM_CALENDAR })\r\n\r\nexport const getTeamCalendar = (id, dateFrom, dateTo) => async (dispatch) => {\r\n\tlet teamCalendar\r\n\tif (dateFrom === undefined && dateTo === undefined) {\r\n\t\tteamCalendar = await requestTeamCalendar(id)\r\n\t} else {\r\n\t\tteamCalendar = await requestTeamCalendarByPeriod(id, dateFrom, dateTo)\r\n\t}\r\n\r\n\tconst processedTeamCalendar = teamCalendar.matches.map(m => ({\r\n\t\tid: m.id,\r\n\t\t...getDateTimeInLocal(m.utcDate),\r\n\t\tcompetition: { id: m.competition.id, name: m.competition.name },\r\n\t\trival: id == m.awayTeam.id ? m.homeTeam : m.awayTeam,\r\n\t\tscore: getScoreMatch(m),\r\n\t\twinner: m.winner === 'HOME_TEAM' ? m.homeTeam : m.awayTeam,\r\n\t}))\r\n\r\n\tconst currentTeamId = id\r\n\tdispatch(setTeamCalendar(processedTeamCalendar, currentTeamId))\r\n}\r\n\r\nconst setCompetitionCalendar = (matches, currentCompetitionId) => ({ type: SET_COMPETITION_CALENDAR, payload: { matches, currentCompetitionId } })\r\nexport const cleanCompetitionCalendar = () => ({ type: CLEAN_COMPETITION_CALENDAR })\r\n\r\nexport const getCompetitionCalendar = (id, dateFrom, dateTo) => async (dispatch) => {\r\n\tlet competitionCalendar = await requestCompetitionsCalendarByPeriod(id, dateFrom, dateTo)\r\n\r\n\tconst processedCompetitionCalendar = competitionCalendar.matches\r\n\t\t.map(m => pick(m, ['id', 'homeTeam', 'awayTeam', 'score', 'status', 'utcDate']))\r\n\t\t.map(m => ({ ...m, ...getDateTimeInLocal(m.utcDate), score: getScoreMatch(m) }))\r\n\t\r\n\tconst currentCompetitionId = id\r\n\tdispatch(setCompetitionCalendar(processedCompetitionCalendar, currentCompetitionId))\r\n}","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav, Container } from 'react-bootstrap';\n\nconst AppBar = () => {\n  return (\n    <Navbar bg=\"light\" variant=\"light\">\n      <Container>\n        <Navbar.Brand as={'h1'} className=\"mr-auto\">SoccerStat App</Navbar.Brand>\n        <Nav variant=\"pills\">\n          <Nav.Link as={NavLink} to=\"/competitions\">Турниры</Nav.Link>\n          <Nav.Link as={NavLink} to=\"/teams\">Команды</Nav.Link>\n        </Nav>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default AppBar","export const getCompetitions = (state) => {\r\n  return state.app.competitions.map(c => ({ id: c.id, title: c.name, subtitle: c.area.name }))\r\n}\r\n\r\nexport const getTeams = (state) => {\r\n  return state.app.teams.map(t => ({ id: t.id, title: t.name, subtitle: t.area.name }))\r\n}\r\n\r\nexport const getTeamCalendarStatus = (state) => state.app.teamCalendar.status\r\nexport const getTeamCalendarList = (state) => state.app.teamCalendar.list\r\nexport const currentTeam = (state) => {\r\n  const { currentTeamId } = state.app.teamCalendar\r\n  return state.app.teams.find(t => t.id == currentTeamId)\r\n}\r\n\r\nexport const getCompetitionCalendarStatus = (state) => state.app.competitionCalendar.status\r\nexport const getCompetitionCalendarList = (state) => state.app.competitionCalendar.list\r\nexport const currentCompetition = (state) => {\r\n  const { currentCompetitionId } = state.app.competitionCalendar\r\n  return state.app.competitions.find(c => c.id == currentCompetitionId)\r\n}","import React from 'react';\nimport { Form, Button, Row, Col, Tooltip } from 'react-bootstrap';\nimport { useFormik, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router';\n\nconst TermFilterForm = ({ getRedirectPath }) => {\n  let history = useHistory();\n  const validate = values => {\n    const errors = {};\n    if (!getRedirectPath(values.term)) {\n      errors.term = 'Ничего не найдено';\n    }\n    return errors;\n  };\n  const formik = useFormik({\n    initialValues: {\n      term: '',\n    },\n    validate,\n    onSubmit: (values) => {\n      history.push(getRedirectPath(values.term))\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Form.Row className=\"justify-content-end\">\n        <Col xs=\"auto\">\n          <Form.Control type=\"text\" placeholder=\"Поиск\" name=\"term\" onChange={formik.handleChange} value={formik.values.term}\n          isInvalid={!!formik.errors.term}/>\n          <Form.Control.Feedback tooltip type=\"invalid\">{formik.errors.term}</Form.Control.Feedback>\n        </Col>\n        <Col xs=\"auto\">\n          <Button variant=\"success\" type=\"submit\">Найти</Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  )\n}\n\nexport default TermFilterForm","import React from 'react';\nimport { Col, Container, Row, Dropdown, Form, Button, Card } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport TermFilterForm from '../Forms/TermFilterForm';\n\nconst renderCards = (data, getLink) => {\n  return data.map(item => {\n    return (\n      <Col sm={6} md={4} lg={3} className={'mb-3'} key={item.id}>\n        <NavLink to={getLink(item)} className={'text-dark'}>\n          <Card className=\"text-center h-100\">\n            <Card.Body>\n              <Card.Title>{item.title}</Card.Title>\n              <Card.Subtitle>{item.subtitle}</Card.Subtitle>\n            </Card.Body>\n          </Card>\n        </NavLink>\n      </Col>\n    )\n  })\n}\n\nconst getRedirectPath = (getLink, listItems) => {\n  return (term) => {\n    const item = listItems.find(i => i.title.toLowerCase().includes(term.toLowerCase()))\n    if (!item) return null\n    return getLink(item)\n  }\n}\n\nconst List = (props) => {\n  return (\n    <Container>\n      <TermFilterForm getRedirectPath={getRedirectPath(props.getLink, props.listItems)} />\n      <Row className=\"my-4\">\n        {renderCards(props.listItems, props.getLink)}\n      </Row>\n    </Container>\n  )\n}\n\nexport default List","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getCompetitions } from '../../redux/app/selectors';\nimport List from './List';\n\nconst ListCompetitionsContainer = (props) => {\n  const getLinkForCompetition = (comp) => {\n    return `/competitions/${comp.id}`\n  }\n  return (\n    <>\n      <h2 className={'text-center py-4'}>Список лиг</h2>\n      <List listItems={props.listItems} getLink={getLinkForCompetition} />\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  listItems: getCompetitions(state),\n})\n\nexport default connect(mapStateToProps)(ListCompetitionsContainer)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getTeams } from '../../redux/app/selectors';\nimport List from './List';\n\nconst ListTeamsContainer = (props) => {\n  const getLinkForTeam = (team) => {\n    return `/teams/${team.id}`\n  }\n  return (\n    <>\n      <h2 className={'text-center py-4'}>Список команд</h2>\n      <List listItems={props.listItems} getLink={getLinkForTeam} />\n    </>\n  )\n}\n\n\n\nconst mapStateToProps = (state) => ({\n  listItems: getTeams(state),\n})\n\n\nexport default connect(mapStateToProps)(ListTeamsContainer)","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nconst TeamTable = ({ list }) => {\n\n  if (list.length === 0) {\n    return <h4 className=\"text-center\">Нет игр. Выберите другой период.</h4>\n  }\n  return (\n    <Table bordered hover size=\"sm\" className='text-center'>\n      <thead>\n        <tr>\n          <th>Дата</th>\n          <th>Турнир</th>\n          <th>Соперник</th>\n          <th>Счет</th>\n          <th>Победитель</th>\n        </tr>\n      </thead>\n      <tbody>\n        {list.map(m => <tr key={m.id}><td>{m.date}</td><td>{m.competition.name}</td><td>{m.rival.name}</td><td>{`${m.score.homeTeam}:${m.score.awayTeam}`}</td><td>{m.winner.name}</td></tr>)}\n      </tbody>\n    </Table>\n\n  )\n}\n\nexport default TeamTable","import React from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router';\n\nconst DateFilterForm = ({ dateFrom: dateFromInitial = '', dateTo: dateToInitial = '', getRedirectPath }) => {\n  let history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      dateFrom: dateFromInitial,\n      dateTo: dateToInitial,\n    },\n    onSubmit: (values) => {\n      history.push(getRedirectPath(values.dateFrom, values.dateTo))\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Form.Group as={Row} controlId=\"dateFrom\" className={'align-items-center'}>\n        <Form.Label column=\"sm\" className={\"align-middle\"}>Начало периода</Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"date\" placeholder=\"Enter email\" name={\"dateFrom\"} onChange={formik.handleChange} value={formik.values.dateFrom} required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" size=\"sm\"/>\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"dateTo\" className={'align-items-center'}>\n        <Form.Label column=\"sm\">Конец периода</Form.Label>\n        <Col sm=\"8\">\n          <Form.Control type=\"date\" placeholder=\"Enter email\" name={\"dateTo\"} onChange={formik.handleChange} value={formik.values.dateTo} required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" size=\"sm\"/>\n        </Col>\n      </Form.Group>\n\n      <Button variant=\"success\" type=\"submit\">Показать</Button>\n    </Form>\n  )\n}\n\nexport default DateFilterForm","export const MAIN = '/soccer-stat';\nexport const COMPETITIONS = '/competitions';\nexport const TEAMS = '/teams';\nexport const PERIOD = '/period';\n// export const SEASON = '/season';\n// export const MONTH = '/month';\nexport const ANY_ROUTE = '*';\n","import React, { useEffect } from 'react';\nimport { Card, Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getTeamCalendar, cleanTeamCalendar } from '../../redux/app/actions'\nimport { getTeamCalendarStatus, getTeamCalendarList, currentTeam } from '../../redux/app/selectors';\nimport TeamTable from '../Tables/TeamTable';\nimport DateFilterForm from '../Forms/DateFilterForm';\nimport * as to from '../../utils/routes';\n\nconst TeamCalendar = (props) => {\n  let { id, dateFrom, dateTo } = useParams();\n\n  const getRedirectPath = (dateFrom, dateTo) => {\n    return `${to.TEAMS}/${id}${to.PERIOD}/${dateFrom}/${dateTo}`\n  }\n\n  useEffect(() => {\n    props.getTeamCalendar(id, dateFrom, dateTo)\n    return () => {\n      props.cleanTeamCalendar()\n    }\n  }, [id, dateFrom, dateTo])\n\n  if (props.status === 'fetching') {\n    return null\n  }\n  return (\n    <Container >\n      <h2 className={'text-center py-4'}>Календарь игр</h2>\n      <Row>\n        <Col lg={'6'} className={'mt-3'}>\n          <Card className={'h-100'}>\n            <Card.Body>\n              <Row>\n                <Col xs={'auto'}>\n                  <Card.Img src={props.currentTeam.crestUrl} style={{ width: 100 + 'px' }} />\n                </Col>\n                <Col>\n                  <Card.Title>{props.currentTeam.name}</Card.Title>\n                  <Card.Subtitle>{props.currentTeam.area.name}</Card.Subtitle>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={'6'} className={'mt-3'}>\n          <Card className=\"text-center className={'h-100'}\">\n            <Card.Body>\n              <Card.Title>Введите период</Card.Title>\n              <DateFilterForm dateFrom={dateFrom} dateTo={dateTo} getRedirectPath={getRedirectPath} />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row className={'mt-3'}>\n        <Col>\n          <TeamTable list={props.list} />\n        </Col>\n      </Row>\n    </Container>\n\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  status: getTeamCalendarStatus(state),\n  list: getTeamCalendarList(state),\n  currentTeam: currentTeam(state),\n})\n\nconst mapDispatchToProps = ({\n  getTeamCalendar,\n  cleanTeamCalendar,\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamCalendar);","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nconst CompetitionTable = ({ list }) => {\n\n  if (list.length === 0) {\n    return <h4 className=\"text-center\">Нет игр. Выберите другой период.</h4>\n  }\n  return (\n    <Table bordered hover size=\"sm\" className='text-center'>\n      <thead>\n        <tr>\n          <th>Дата</th>\n          <th>Хозяева</th>\n          <th>Счет</th>\n          <th>Гости</th>\n          <th>Статус</th>\n        </tr>\n      </thead>\n      <tbody>\n        {list.map(m => <tr key={m.id}><td>{m.date}</td><td>{m.homeTeam.name}</td><td>{`${m.score.homeTeam}:${m.score.awayTeam}`}</td><td>{m.awayTeam.name}</td><td>{m.status}</td></tr>)}\n      </tbody>\n    </Table>\n\n  )\n}\n\nexport default CompetitionTable","import React, { useEffect } from 'react';\nimport { Card, Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getCompetitionCalendar, cleanCompetitionCalendar } from '../../redux/app/actions'\nimport { getCompetitionCalendarStatus, getCompetitionCalendarList, currentCompetition } from '../../redux/app/selectors';\nimport { getLastMonthPeriod } from '../../helpers/helpers';\nimport CompetitionTable from '../Tables/CompetitionTable';\nimport DateFilterForm from '../Forms/DateFilterForm';\nimport * as to from '../../utils/routes';\n\nconst CompetitionCalendar = (props) => {\n  let { id, dateFrom, dateTo } = useParams();\n\n  let lastMonthPeriod = getLastMonthPeriod()\n  dateFrom = dateFrom || lastMonthPeriod.dateFrom\n  dateTo = dateTo || lastMonthPeriod.dateTo\n\n  const getRedirectPath = (dateFrom, dateTo) => {\n    return `${to.COMPETITIONS}/${id}${to.PERIOD}/${dateFrom}/${dateTo}`\n  }\n\n  useEffect(() => {\n      props.getCompetitionCalendar(id, dateFrom, dateTo)\n    return () => {\n      props.cleanCompetitionCalendar()\n    }\n  }, [id, dateFrom, dateTo])\n\n  if (props.status === 'fetching') {\n    return null\n  }\n  return (\n    <Container >\n      <h2 className={'text-center py-4'}>Календарь игр</h2>\n      <Row>\n        <Col lg={'6'} className={'mt-3'}>\n          <Card className={'h-100'}>\n            <Card.Body>\n              <Row>\n                <Col xs={'auto'}>\n                  <Card.Img src={props.currentCompetition.emblemUrl} style={{ width: 100 + 'px' }} />\n                </Col>\n                <Col>\n                  <Card.Title>{props.currentCompetition.name}</Card.Title>\n                  <Card.Subtitle>{props.currentCompetition.area.name}</Card.Subtitle>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={'6'} className={'mt-3'}>\n          <Card className=\"text-center className={'h-100'}\">\n            <Card.Body>\n              <Card.Title>Введите период</Card.Title>\n              <DateFilterForm dateFrom={dateFrom} dateTo={dateTo} getRedirectPath={getRedirectPath} />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row className={'mt-3'}>\n        <Col>\n          <CompetitionTable list={props.list} />\n        </Col>\n      </Row>\n    </Container>\n\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  status: getCompetitionCalendarStatus(state),\n  list: getCompetitionCalendarList(state),\n  currentCompetition: currentCompetition(state),\n})\n\nconst mapDispatchToProps = ({\n  getCompetitionCalendar,\n  cleanCompetitionCalendar,\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompetitionCalendar);","import './App.css';\nimport { initializingApp } from './redux/app/actions';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from './components/AppBar/AppBar.jsx'\nimport ListCompetitionsContainer from './components/List/ListCompetitionsContainer';\nimport ListTeamsContainer from './components/List/ListTeamsContainer';\nimport TeamCalendar from './components/Calendar/TeamCalendar';\nimport CompetitionCalendar from './components/Calendar/CompetitionCalendar';\nimport * as to from '../src/utils/routes.js';\nimport { Redirect, Route, Switch } from 'react-router';\n\nfunction App(props) {\n  useEffect(() => {\n    props.initializingApp()\n  }, [])\n  if (!props.initialized) {\n    return null\n  }\n\n  return (\n    <div className=\"App\">\n      <AppBar />\n      <Switch>\n        <Route path='/' exact render={() => <Redirect to={to.COMPETITIONS} />} />\n        <Route path={to.COMPETITIONS } exact render={() => <ListCompetitionsContainer />} />\n        <Route path={`${to.COMPETITIONS}/:id`} exact render={() => <CompetitionCalendar />} />\n        <Route path={`${to.COMPETITIONS}/:id${to.PERIOD}/:dateFrom/:dateTo`} exact render={() => <CompetitionCalendar />} />\n        <Route path={to.TEAMS } exact render={() => <ListTeamsContainer />} />\n        <Route path={`${to.TEAMS}/:id`} exact render={() => <TeamCalendar />} />\n        <Route path={`${to.TEAMS}/:id${to.PERIOD}/:dateFrom/:dateTo`} exact render={() => <TeamCalendar />} />\n\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initializingApp: () => dispatch(initializingApp())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { INITIALIZING_APP_SUCCESS, SET_COMPETITIONS, SET_TEAMS, SET_TEAM_CALENDAR, CLEAN_TEAM_CALENDAR, SET_COMPETITION_CALENDAR, CLEAN_COMPETITION_CALENDAR } from './types';\r\n\r\nlet initialState = {\r\n\tinitialized: false,\r\n\tcompetitions: [],\r\n\tteams: [],\r\n\tteamCalendar: {\r\n\t\tstatus: 'fetching',\r\n\t\tlist: [],\r\n\t\tcurrentTeamId: null,\r\n\t},\r\n\tcompetitionCalendar: {\r\n\t\tstatus: 'fetching',\r\n\t\tlist: [],\r\n\t\tcurrentCompetitionId: null,\r\n\t}\r\n}\r\n\r\nconst handlers = {\r\n\t[INITIALIZING_APP_SUCCESS]: (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tinitialized: true,\r\n\t\t}\r\n\t},\r\n\t[SET_COMPETITIONS]: (state, action) => {\r\n\t\tconst { competitions } = action.payload\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tcompetitions,\r\n\t\t}\r\n\t},\r\n\t[SET_TEAMS]: (state, action) => {\r\n\t\tconst { teams } = action.payload\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tteams,\r\n\t\t}\r\n\t},\r\n\t[SET_TEAM_CALENDAR]: (state, action) => {\r\n\t\tconst { matches, currentTeamId } = action.payload\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tteamCalendar: {\r\n\t\t\t\t...state.teamCalendar,\r\n\t\t\t\tstatus: 'received',\r\n\t\t\t\tlist: [...matches],\r\n\t\t\t\tcurrentTeamId: currentTeamId,\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[CLEAN_TEAM_CALENDAR]: (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tteamCalendar: {\r\n\t\t\t\tstatus: 'fetching',\r\n\t\t\t\tlist: [],\r\n\t\t\t\tcurrentTeamId: null,\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[SET_COMPETITION_CALENDAR]: (state, action) => {\r\n\t\tconst { matches, currentCompetitionId } = action.payload\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tcompetitionCalendar: {\r\n\t\t\t\tstatus: 'received',\r\n\t\t\t\tlist: [...matches],\r\n\t\t\t\tcurrentCompetitionId: currentCompetitionId,\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[CLEAN_COMPETITION_CALENDAR]: (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tcompetitionCalendar: {\r\n\t\t\t\tstatus: 'fetching',\r\n\t\t\t\tlist: [],\r\n\t\t\t\tcurrentCompetitionId: null,\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n\tif (handlers[action.type]) {\r\n\t\treturn handlers[action.type](state, action);\r\n\t}\r\n\treturn state\r\n}\r\n\r\n\r\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { appReducer } from './app/appReducer';\r\n\r\nconst reducers = combineReducers({\r\n  app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store.js';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter baseName={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}